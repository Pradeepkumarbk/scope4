version: 2
jobs:
  build:
    branches:
      ignore:
        - gh-pages
    machine: 
      enabled: true
    pre:
      - curl -sSL https://s3.amazonaws.com/circle-downloads/install-circleci-docker.sh | bash -s -- 1.10.0
    services:
      - docker
    environment:
      - GOPATH: /home/ubuntu
      - SRCDIR: /home/ubuntu/src/github.com/weaveworks/scope
      - PATH: $PATH:$HOME/.local/bin
      - CLOUDSDK_CORE_DISABLE_PROMPTS: 1
      - SCOPE_UI_BUILD: $HOME/docker/scope_ui_build.tar
      - IMAGES: scope cloud-agent
    steps:
      - checkout
      - run:
          command: | 
            pip install --upgrade requests
            "~/docker"
            sudo apt-get update &&
            sudo apt-get install jq pv &&
            sudo chmod a+wr --recursive /usr/local/go/pkg &&
            sudo chown ubuntu:ubuntu "$HOME/.bashrc.backup"
            (curl https://sdk.cloud.google.com | bash) &&
            (test -z "$SECRET_PASSWORD" || bin/setup-circleci-secrets "$SECRET_PASSWORD") &&
            make deps &&
            mkdir -p $(dirname $SRCDIR) &&
            cp -r $(pwd)/ $SRCDIR
            "cd $SRCDIR/client; ../tools/rebuild-image weaveworks/scope-ui-build . Dockerfile package.json webpack.production.config.js .eslintrc .babelrc && touch $SRCDIR/.scope_ui_build.uptodate"
            "cd $SRCDIR/backend; ../tools/rebuild-image weaveworks/scope-backend-build . Dockerfile build.sh && touch $SRCDIR/.scope_backend_build.uptodate"
            test -z "$SECRET_PASSWORD" || (cd $SRCDIR/integration; ./gce.sh make_template):
              parallel: false
            sudo apt-get update && sudo apt-get install python-pip && sudo pip install awscli
            cd $SRCDIR; make RM= lint:
              parallel: true
            cd $SRCDIR; COVERDIR=./coverage make RM= CODECGEN_UID=23 tests:
              parallel: true
            cd $SRCDIR; make RM= client-test static:
              parallel: true
            cd $SRCDIR; make RM= client-lint static:
              parallel: true
            cd $SRCDIR; rm -f prog/scope; if [ "$CIRCLE_NODE_INDEX" = "0" ]; then GOARCH=arm make GO_BUILD_INSTALL_DEPS= RM= prog/scope; else GOOS=darwin make GO_BUILD_INSTALL_DEPS= RM= prog/scope; fi:
              parallel: true
            cd $SRCDIR; rm -f prog/scope; make RM=:
              parallel: true
            cd $SRCDIR/extras; ./build_on_circle.sh:
              parallel: true
            "test -z \"$SECRET_PASSWORD\" || (cd $SRCDIR/integration; ./gce.sh setup && eval $(./gce.sh hosts); ./setup.sh)":
              parallel: true
            test -z "$SECRET_PASSWORD" || (cd $SRCDIR/integration; eval $(./gce.sh hosts); ./run_all.sh):
              parallel: true
                timeout: 300
            test -z "$SECRET_PASSWORD" || (cd $SRCDIR/integration; ./gce.sh destroy):
              parallel: true
            test "$CIRCLE_NODE_INDEX" != "0" || (cd $SRCDIR; ./tools/cover/gather_coverage.sh ./coverage $SRCDIR/coverage):
              parallel: true
            test "$CIRCLE_NODE_INDEX" != "0" || (goveralls -repotoken $COVERALLS_REPO_TOKEN -coverprofile=$SRCDIR/profile.cov -service=circleci || true):
              parallel: true
            test "$CIRCLE_NODE_INDEX" != "0" || (cd $SRCDIR; cp */*.codecgen.go $CIRCLE_ARTIFACTS):
              parallel: true
